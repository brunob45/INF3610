-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_filter is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sobel_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_filter,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=165442899,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3452,HLS_SYN_LUT=3059}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage40 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage41 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage42 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage43 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage44 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage45 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage46 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage47 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage48 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage49 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage50 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage51 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage52 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage53 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage54 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage55 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage56 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage57 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage58 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage59 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage60 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage61 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage62 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage63 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage64 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage65 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage66 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage67 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage68 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage69 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage70 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage71 : STD_LOGIC_VECTOR (111 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage72 : STD_LOGIC_VECTOR (111 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage73 : STD_LOGIC_VECTOR (111 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage74 : STD_LOGIC_VECTOR (111 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage75 : STD_LOGIC_VECTOR (111 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage76 : STD_LOGIC_VECTOR (111 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage77 : STD_LOGIC_VECTOR (111 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage78 : STD_LOGIC_VECTOR (111 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage79 : STD_LOGIC_VECTOR (111 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (111 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_9C80 : STD_LOGIC_VECTOR (15 downto 0) := "1001110010000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv21_77F : STD_LOGIC_VECTOR (20 downto 0) := "000000000011101111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_780 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011110000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv16_A400 : STD_LOGIC_VECTOR (15 downto 0) := "1010010000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv21_1FA400 : STD_LOGIC_VECTOR (20 downto 0) := "111111010010000000000";
    constant ap_const_lv21_780 : STD_LOGIC_VECTOR (20 downto 0) := "000000000011110000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv21_1F8C94 : STD_LOGIC_VECTOR (20 downto 0) := "111111000110010010100";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv11_77F : STD_LOGIC_VECTOR (10 downto 0) := "11101111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_37 : STD_LOGIC_VECTOR (7 downto 0) := "00110111";
    constant ap_const_lv8_9B : STD_LOGIC_VECTOR (7 downto 0) := "10011011";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inter_pix : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getVal_fu_234_Y_blk_n_AR : STD_LOGIC;
    signal grp_getVal_fu_234_Y_blk_n_R : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_flag00000000 : BOOLEAN;
    signal exitcond_flatten_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_pp0_stage30_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_pp0_stage33_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage40 : signal is "none";
    signal ap_block_pp0_stage40_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage43 : signal is "none";
    signal ap_block_pp0_stage43_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage50 : signal is "none";
    signal ap_block_pp0_stage50_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage53 : signal is "none";
    signal ap_block_pp0_stage53_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage60 : signal is "none";
    signal ap_block_pp0_stage60_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage63 : signal is "none";
    signal ap_block_pp0_stage63_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage70 : signal is "none";
    signal ap_block_pp0_stage70_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage73 : signal is "none";
    signal ap_block_pp0_stage73_flag00000000 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal gmem2_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal gmem2_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_flag00000000 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_flatten_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_flag00000000 : BOOLEAN;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWVALID : STD_LOGIC;
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_WVALID : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BREADY : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_201 : STD_LOGIC_VECTOR (20 downto 0);
    signal y_assign_reg_212 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_assign_reg_223 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_getVal_fu_234_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state42_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_flag00011001 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state112_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal inter_pix_read_reg_754 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix3_reg_759 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_gmem2_AWREADY : STD_LOGIC;
    signal tmp_1_cast_fu_267_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_cast_reg_770 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_fu_283_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_ioackin_gmem2_WREADY : STD_LOGIC;
    signal ap_block_state3_io : BOOLEAN;
    signal out_pix4_sum5_fu_303_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum5_reg_793 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exitcond2_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_308_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_2_reg_798 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_pix4_sum8_fu_334_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum8_reg_811 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_3_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_339_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_3_reg_816 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal out_pix4_sum7_fu_365_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal out_pix4_sum7_reg_830 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_4_fu_370_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_4_reg_835 : STD_LOGIC_VECTOR (20 downto 0);
    signal exitcond_flatten_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_422_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal indvar_flatten_next_reg_849 : STD_LOGIC_VECTOR (20 downto 0);
    signal y_assign_mid2_fu_486_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_assign_mid2_reg_854 : STD_LOGIC_VECTOR (10 downto 0);
    signal fullIndex_fu_498_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal fullIndex_reg_859 : STD_LOGIC_VECTOR (22 downto 0);
    signal x_fu_504_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_reg_865 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state52_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_flag00011001 : BOOLEAN;
    signal tmp_11_reg_875 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state62_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_flag00011001 : BOOLEAN;
    signal tmp_13_reg_880 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state72_pp0_stage40_iter0 : BOOLEAN;
    signal ap_block_pp0_stage40_flag00011001 : BOOLEAN;
    signal tmp_14_reg_885 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state82_pp0_stage50_iter0 : BOOLEAN;
    signal ap_block_pp0_stage50_flag00011001 : BOOLEAN;
    signal tmp_15_reg_890 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state92_pp0_stage60_iter0 : BOOLEAN;
    signal ap_block_pp0_stage60_flag00011001 : BOOLEAN;
    signal tmp_16_reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state102_pp0_stage70_iter0 : BOOLEAN;
    signal ap_block_pp0_stage70_flag00011001 : BOOLEAN;
    signal x_weight_2_fu_598_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_reg_900 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage71 : signal is "none";
    signal ap_block_state103_pp0_stage71_iter0 : BOOLEAN;
    signal ap_block_pp0_stage71_flag00011001 : BOOLEAN;
    signal y_weight_2_fu_604_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_reg_905 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_610_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_910 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pix4_sum6_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix4_sum6_reg_915 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state33_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state113_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_flag00011001 : BOOLEAN;
    signal tmp_20_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_reg_925 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_661_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_reg_930 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_935 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_940 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_677_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_945 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_i_fu_731_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_i_reg_950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state34_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state114_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state114_io : BOOLEAN;
    signal ap_block_pp0_stage2_flag00011001 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state32 : STD_LOGIC;
    signal ap_block_state111_pp0_stage79_iter0 : BOOLEAN;
    signal ap_block_pp0_stage79_flag00011011 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage79 : signal is "none";
    signal ap_block_state40_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state120_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_flag00011011 : BOOLEAN;
    signal grp_getVal_fu_234_ap_start : STD_LOGIC;
    signal grp_getVal_fu_234_ap_done : STD_LOGIC;
    signal grp_getVal_fu_234_ap_idle : STD_LOGIC;
    signal grp_getVal_fu_234_ap_ready : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_AWVALID : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_WVALID : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_WLAST : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARVALID : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getVal_fu_234_m_axi_Y_RREADY : STD_LOGIC;
    signal grp_getVal_fu_234_m_axi_Y_BREADY : STD_LOGIC;
    signal grp_getVal_fu_234_ap_ce : STD_LOGIC;
    signal grp_getVal_fu_234_xDiff : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getVal_fu_234_yDiff : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state35_pp0_stage3_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state115_pp0_stage3_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_state115_io : BOOLEAN;
    signal ap_block_pp0_stage3_flag00011001 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state116_pp0_stage4_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state37_pp0_stage5_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state117_pp0_stage5_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state38_pp0_stage6_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state118_pp0_stage6_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state39_pp0_stage7_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state119_pp0_stage7_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state40_pp0_stage8_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_state120_pp0_stage8_iter1_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage8_flag00011001 : BOOLEAN;
    signal ap_block_state41_pp0_stage9_iter0_ignore_call18 : BOOLEAN;
    signal ap_block_pp0_stage9_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state43_pp0_stage11_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state44_pp0_stage12_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state45_pp0_stage13_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage13_flag00011001 : BOOLEAN;
    signal ap_block_state46_pp0_stage14_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state47_pp0_stage15_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage15_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state48_pp0_stage16_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state49_pp0_stage17_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state50_pp0_stage18_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state51_pp0_stage19_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state53_pp0_stage21_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state54_pp0_stage22_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state55_pp0_stage23_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage23_flag00011001 : BOOLEAN;
    signal ap_block_state56_pp0_stage24_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state57_pp0_stage25_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_state58_pp0_stage26_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state59_pp0_stage27_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state60_pp0_stage28_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_state61_pp0_stage29_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_state63_pp0_stage31_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_state64_pp0_stage32_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_state65_pp0_stage33_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage33_flag00011001 : BOOLEAN;
    signal ap_block_state66_pp0_stage34_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state67_pp0_stage35_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_state68_pp0_stage36_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_state69_pp0_stage37_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_state70_pp0_stage38_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state71_pp0_stage39_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state73_pp0_stage41_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage41 : signal is "none";
    signal ap_block_state74_pp0_stage42_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage42 : signal is "none";
    signal ap_block_state75_pp0_stage43_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage43_flag00011001 : BOOLEAN;
    signal ap_block_state76_pp0_stage44_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage44 : signal is "none";
    signal ap_block_state77_pp0_stage45_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage45 : signal is "none";
    signal ap_block_state78_pp0_stage46_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage46 : signal is "none";
    signal ap_block_state79_pp0_stage47_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage47 : signal is "none";
    signal ap_block_state80_pp0_stage48_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage48 : signal is "none";
    signal ap_block_state81_pp0_stage49_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage49 : signal is "none";
    signal ap_block_state83_pp0_stage51_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage51 : signal is "none";
    signal ap_block_state84_pp0_stage52_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage52 : signal is "none";
    signal ap_block_state85_pp0_stage53_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage53_flag00011001 : BOOLEAN;
    signal ap_block_state86_pp0_stage54_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage54 : signal is "none";
    signal ap_block_state87_pp0_stage55_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage55 : signal is "none";
    signal ap_block_state88_pp0_stage56_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage56 : signal is "none";
    signal ap_block_state89_pp0_stage57_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage57 : signal is "none";
    signal ap_block_state90_pp0_stage58_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage58 : signal is "none";
    signal ap_block_state91_pp0_stage59_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage59 : signal is "none";
    signal ap_block_state93_pp0_stage61_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage61 : signal is "none";
    signal ap_block_state94_pp0_stage62_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage62 : signal is "none";
    signal ap_block_state95_pp0_stage63_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage63_flag00011001 : BOOLEAN;
    signal ap_block_state96_pp0_stage64_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage64_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage64 : signal is "none";
    signal ap_block_state97_pp0_stage65_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage65_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage65 : signal is "none";
    signal ap_block_state98_pp0_stage66_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage66_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage66 : signal is "none";
    signal ap_block_state99_pp0_stage67_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage67_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage67 : signal is "none";
    signal ap_block_state100_pp0_stage68_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage68_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage68 : signal is "none";
    signal ap_block_state101_pp0_stage69_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage69_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage69 : signal is "none";
    signal ap_block_state104_pp0_stage72_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage72_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage72 : signal is "none";
    signal ap_block_state105_pp0_stage73_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage73_flag00011001 : BOOLEAN;
    signal ap_block_state106_pp0_stage74_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage74_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage74 : signal is "none";
    signal ap_block_state107_pp0_stage75_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage75_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage75 : signal is "none";
    signal ap_block_state108_pp0_stage76_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage76_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage76 : signal is "none";
    signal ap_block_state109_pp0_stage77_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage77_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage77 : signal is "none";
    signal ap_block_state110_pp0_stage78_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage78_flag00011001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage78 : signal is "none";
    signal ap_block_state111_pp0_stage79_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage79_flag00011001 : BOOLEAN;
    signal i_reg_157 : STD_LOGIC_VECTOR (10 downto 0);
    signal i1_reg_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal i2_reg_179 : STD_LOGIC_VECTOR (20 downto 0);
    signal i3_reg_190 : STD_LOGIC_VECTOR (20 downto 0);
    signal indvar_flatten_phi_fu_205_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal y_assign_phi_fu_216_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_assign_phi_fu_227_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_grp_getVal_fu_234_ap_start : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage71_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage9_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage15_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage64_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage65_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage66_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage67_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage68_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage69_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage72_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage74_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage75_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage76_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage77_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage78_flag00000000 : BOOLEAN;
    signal ap_block_pp0_stage79_flag00000000 : BOOLEAN;
    signal out_pix4_sum5_cast_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix4_sum8_cast_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_pix4_sum7_cast_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_gmem2_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem2_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_flag00001001 : BOOLEAN;
    signal ap_block_state35_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state115_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00001001 : BOOLEAN;
    signal tmp_19_fu_745_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_cast_fu_289_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal i1_cast7_cast_fu_293_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i2_cast_cast_fu_324_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i3_cast_cast_fu_355_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl_fu_386_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl1_fu_398_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_394_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_fu_406_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y9_fu_442_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_mid1_fu_448_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_shl1_mid1_fu_460_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_mid1_fu_456_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_mid1_fu_468_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_8_mid1_fu_472_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_8_fu_410_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal x_assign_mid2_fu_434_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_assign_cast4_fu_494_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_8_mid2_fu_478_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_0_1_fu_517_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_0_2_cast_fu_528_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_221_cast_fu_513_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_0_2_fu_531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_fu_541_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_0_2_cast_fu_537_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_fu_548_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_1_2_fu_558_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_1_1_fu_552_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_1_2_cast_fu_565_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp1_fu_575_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_0_1_cast_fu_524_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp1_cast_fu_581_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_1_2_fu_585_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_weight_1_2_fu_569_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_2_cast_fu_595_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_1_2_cast_fu_591_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal fullIndex_cast_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_fu_619_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_626_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_2_2_cast_fu_635_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_1_fu_630_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_2_fu_639_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_2_fu_644_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_683_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_688_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_693_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_717_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_fu_699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (111 downto 0);
    signal ap_block_pp0_stage1_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage2_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage3_flag00011011 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state116_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_flag00011011 : BOOLEAN;
    signal ap_block_state37_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state117_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_flag00011011 : BOOLEAN;
    signal ap_block_state38_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state118_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_flag00011011 : BOOLEAN;
    signal ap_block_state39_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state119_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_flag00011011 : BOOLEAN;
    signal ap_block_state41_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage10_flag00011011 : BOOLEAN;
    signal ap_block_state43_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_flag00011011 : BOOLEAN;
    signal ap_block_state44_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_flag00011011 : BOOLEAN;
    signal ap_block_state45_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_flag00011011 : BOOLEAN;
    signal ap_block_state46_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_flag00011011 : BOOLEAN;
    signal ap_block_state47_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_flag00011011 : BOOLEAN;
    signal ap_block_state48_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_flag00011011 : BOOLEAN;
    signal ap_block_state49_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_flag00011011 : BOOLEAN;
    signal ap_block_state50_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_flag00011011 : BOOLEAN;
    signal ap_block_state51_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage20_flag00011011 : BOOLEAN;
    signal ap_block_state53_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_flag00011011 : BOOLEAN;
    signal ap_block_state54_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_flag00011011 : BOOLEAN;
    signal ap_block_state55_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_flag00011011 : BOOLEAN;
    signal ap_block_state56_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_flag00011011 : BOOLEAN;
    signal ap_block_state57_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_flag00011011 : BOOLEAN;
    signal ap_block_state58_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_flag00011011 : BOOLEAN;
    signal ap_block_state59_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_flag00011011 : BOOLEAN;
    signal ap_block_state60_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_flag00011011 : BOOLEAN;
    signal ap_block_state61_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage30_flag00011011 : BOOLEAN;
    signal ap_block_state63_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_flag00011011 : BOOLEAN;
    signal ap_block_state64_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_flag00011011 : BOOLEAN;
    signal ap_block_state65_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_flag00011011 : BOOLEAN;
    signal ap_block_state66_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_flag00011011 : BOOLEAN;
    signal ap_block_state67_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_flag00011011 : BOOLEAN;
    signal ap_block_state68_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_flag00011011 : BOOLEAN;
    signal ap_block_state69_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_flag00011011 : BOOLEAN;
    signal ap_block_state70_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_flag00011011 : BOOLEAN;
    signal ap_block_state71_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage40_flag00011011 : BOOLEAN;
    signal ap_block_state73_pp0_stage41_iter0 : BOOLEAN;
    signal ap_block_pp0_stage41_flag00011011 : BOOLEAN;
    signal ap_block_state74_pp0_stage42_iter0 : BOOLEAN;
    signal ap_block_pp0_stage42_flag00011011 : BOOLEAN;
    signal ap_block_state75_pp0_stage43_iter0 : BOOLEAN;
    signal ap_block_pp0_stage43_flag00011011 : BOOLEAN;
    signal ap_block_state76_pp0_stage44_iter0 : BOOLEAN;
    signal ap_block_pp0_stage44_flag00011011 : BOOLEAN;
    signal ap_block_state77_pp0_stage45_iter0 : BOOLEAN;
    signal ap_block_pp0_stage45_flag00011011 : BOOLEAN;
    signal ap_block_state78_pp0_stage46_iter0 : BOOLEAN;
    signal ap_block_pp0_stage46_flag00011011 : BOOLEAN;
    signal ap_block_state79_pp0_stage47_iter0 : BOOLEAN;
    signal ap_block_pp0_stage47_flag00011011 : BOOLEAN;
    signal ap_block_state80_pp0_stage48_iter0 : BOOLEAN;
    signal ap_block_pp0_stage48_flag00011011 : BOOLEAN;
    signal ap_block_state81_pp0_stage49_iter0 : BOOLEAN;
    signal ap_block_pp0_stage49_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage50_flag00011011 : BOOLEAN;
    signal ap_block_state83_pp0_stage51_iter0 : BOOLEAN;
    signal ap_block_pp0_stage51_flag00011011 : BOOLEAN;
    signal ap_block_state84_pp0_stage52_iter0 : BOOLEAN;
    signal ap_block_pp0_stage52_flag00011011 : BOOLEAN;
    signal ap_block_state85_pp0_stage53_iter0 : BOOLEAN;
    signal ap_block_pp0_stage53_flag00011011 : BOOLEAN;
    signal ap_block_state86_pp0_stage54_iter0 : BOOLEAN;
    signal ap_block_pp0_stage54_flag00011011 : BOOLEAN;
    signal ap_block_state87_pp0_stage55_iter0 : BOOLEAN;
    signal ap_block_pp0_stage55_flag00011011 : BOOLEAN;
    signal ap_block_state88_pp0_stage56_iter0 : BOOLEAN;
    signal ap_block_pp0_stage56_flag00011011 : BOOLEAN;
    signal ap_block_state89_pp0_stage57_iter0 : BOOLEAN;
    signal ap_block_pp0_stage57_flag00011011 : BOOLEAN;
    signal ap_block_state90_pp0_stage58_iter0 : BOOLEAN;
    signal ap_block_pp0_stage58_flag00011011 : BOOLEAN;
    signal ap_block_state91_pp0_stage59_iter0 : BOOLEAN;
    signal ap_block_pp0_stage59_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage60_flag00011011 : BOOLEAN;
    signal ap_block_state93_pp0_stage61_iter0 : BOOLEAN;
    signal ap_block_pp0_stage61_flag00011011 : BOOLEAN;
    signal ap_block_state94_pp0_stage62_iter0 : BOOLEAN;
    signal ap_block_pp0_stage62_flag00011011 : BOOLEAN;
    signal ap_block_state95_pp0_stage63_iter0 : BOOLEAN;
    signal ap_block_pp0_stage63_flag00011011 : BOOLEAN;
    signal ap_block_state96_pp0_stage64_iter0 : BOOLEAN;
    signal ap_block_pp0_stage64_flag00011011 : BOOLEAN;
    signal ap_block_state97_pp0_stage65_iter0 : BOOLEAN;
    signal ap_block_pp0_stage65_flag00011011 : BOOLEAN;
    signal ap_block_state98_pp0_stage66_iter0 : BOOLEAN;
    signal ap_block_pp0_stage66_flag00011011 : BOOLEAN;
    signal ap_block_state99_pp0_stage67_iter0 : BOOLEAN;
    signal ap_block_pp0_stage67_flag00011011 : BOOLEAN;
    signal ap_block_state100_pp0_stage68_iter0 : BOOLEAN;
    signal ap_block_pp0_stage68_flag00011011 : BOOLEAN;
    signal ap_block_state101_pp0_stage69_iter0 : BOOLEAN;
    signal ap_block_pp0_stage69_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage70_flag00011011 : BOOLEAN;
    signal ap_block_pp0_stage71_flag00011011 : BOOLEAN;
    signal ap_block_state104_pp0_stage72_iter0 : BOOLEAN;
    signal ap_block_pp0_stage72_flag00011011 : BOOLEAN;
    signal ap_block_state105_pp0_stage73_iter0 : BOOLEAN;
    signal ap_block_pp0_stage73_flag00011011 : BOOLEAN;
    signal ap_block_state106_pp0_stage74_iter0 : BOOLEAN;
    signal ap_block_pp0_stage74_flag00011011 : BOOLEAN;
    signal ap_block_state107_pp0_stage75_iter0 : BOOLEAN;
    signal ap_block_pp0_stage75_flag00011011 : BOOLEAN;
    signal ap_block_state108_pp0_stage76_iter0 : BOOLEAN;
    signal ap_block_pp0_stage76_flag00011011 : BOOLEAN;
    signal ap_block_state109_pp0_stage77_iter0 : BOOLEAN;
    signal ap_block_pp0_stage77_flag00011011 : BOOLEAN;
    signal ap_block_state110_pp0_stage78_iter0 : BOOLEAN;
    signal ap_block_pp0_stage78_flag00011011 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_2416 : BOOLEAN;

    component getVal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_Y_AWVALID : OUT STD_LOGIC;
        m_axi_Y_AWREADY : IN STD_LOGIC;
        m_axi_Y_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Y_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Y_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Y_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Y_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_WVALID : OUT STD_LOGIC;
        m_axi_Y_WREADY : IN STD_LOGIC;
        m_axi_Y_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_Y_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_WLAST : OUT STD_LOGIC;
        m_axi_Y_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_ARVALID : OUT STD_LOGIC;
        m_axi_Y_ARREADY : IN STD_LOGIC;
        m_axi_Y_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Y_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_Y_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Y_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_Y_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_Y_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_RVALID : IN STD_LOGIC;
        m_axi_Y_RREADY : OUT STD_LOGIC;
        m_axi_Y_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_Y_RLAST : IN STD_LOGIC;
        m_axi_Y_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_BVALID : IN STD_LOGIC;
        m_axi_Y_BREADY : OUT STD_LOGIC;
        m_axi_Y_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_Y_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_Y_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ce : IN STD_LOGIC;
        index : IN STD_LOGIC_VECTOR (22 downto 0);
        xDiff : IN STD_LOGIC_VECTOR (1 downto 0);
        yDiff : IN STD_LOGIC_VECTOR (1 downto 0);
        inter_pix1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        Y_blk_n_AR : OUT STD_LOGIC;
        Y_blk_n_R : OUT STD_LOGIC );
    end component;


    component sobel_filter_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        inter_pix : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_pix : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_filter_gmem_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sobel_filter_gmem2_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    sobel_filter_AXILiteS_s_axi_U : component sobel_filter_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        inter_pix => inter_pix,
        out_pix => out_pix);

    sobel_filter_gmem_m_axi_U : component sobel_filter_gmem_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => grp_getVal_fu_234_m_axi_Y_ARADDR,
        I_ARID => grp_getVal_fu_234_m_axi_Y_ARID,
        I_ARLEN => grp_getVal_fu_234_m_axi_Y_ARLEN,
        I_ARSIZE => grp_getVal_fu_234_m_axi_Y_ARSIZE,
        I_ARLOCK => grp_getVal_fu_234_m_axi_Y_ARLOCK,
        I_ARCACHE => grp_getVal_fu_234_m_axi_Y_ARCACHE,
        I_ARQOS => grp_getVal_fu_234_m_axi_Y_ARQOS,
        I_ARPROT => grp_getVal_fu_234_m_axi_Y_ARPROT,
        I_ARUSER => grp_getVal_fu_234_m_axi_Y_ARUSER,
        I_ARBURST => grp_getVal_fu_234_m_axi_Y_ARBURST,
        I_ARREGION => grp_getVal_fu_234_m_axi_Y_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    sobel_filter_gmem2_m_axi_U : component sobel_filter_gmem2_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => gmem2_AWVALID,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => gmem2_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => gmem2_AWLEN,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem2_WVALID,
        I_WREADY => gmem2_WREADY,
        I_WDATA => gmem2_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem2_BVALID,
        I_BREADY => gmem2_BREADY,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    grp_getVal_fu_234 : component getVal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_getVal_fu_234_ap_start,
        ap_done => grp_getVal_fu_234_ap_done,
        ap_idle => grp_getVal_fu_234_ap_idle,
        ap_ready => grp_getVal_fu_234_ap_ready,
        m_axi_Y_AWVALID => grp_getVal_fu_234_m_axi_Y_AWVALID,
        m_axi_Y_AWREADY => ap_const_logic_0,
        m_axi_Y_AWADDR => grp_getVal_fu_234_m_axi_Y_AWADDR,
        m_axi_Y_AWID => grp_getVal_fu_234_m_axi_Y_AWID,
        m_axi_Y_AWLEN => grp_getVal_fu_234_m_axi_Y_AWLEN,
        m_axi_Y_AWSIZE => grp_getVal_fu_234_m_axi_Y_AWSIZE,
        m_axi_Y_AWBURST => grp_getVal_fu_234_m_axi_Y_AWBURST,
        m_axi_Y_AWLOCK => grp_getVal_fu_234_m_axi_Y_AWLOCK,
        m_axi_Y_AWCACHE => grp_getVal_fu_234_m_axi_Y_AWCACHE,
        m_axi_Y_AWPROT => grp_getVal_fu_234_m_axi_Y_AWPROT,
        m_axi_Y_AWQOS => grp_getVal_fu_234_m_axi_Y_AWQOS,
        m_axi_Y_AWREGION => grp_getVal_fu_234_m_axi_Y_AWREGION,
        m_axi_Y_AWUSER => grp_getVal_fu_234_m_axi_Y_AWUSER,
        m_axi_Y_WVALID => grp_getVal_fu_234_m_axi_Y_WVALID,
        m_axi_Y_WREADY => ap_const_logic_0,
        m_axi_Y_WDATA => grp_getVal_fu_234_m_axi_Y_WDATA,
        m_axi_Y_WSTRB => grp_getVal_fu_234_m_axi_Y_WSTRB,
        m_axi_Y_WLAST => grp_getVal_fu_234_m_axi_Y_WLAST,
        m_axi_Y_WID => grp_getVal_fu_234_m_axi_Y_WID,
        m_axi_Y_WUSER => grp_getVal_fu_234_m_axi_Y_WUSER,
        m_axi_Y_ARVALID => grp_getVal_fu_234_m_axi_Y_ARVALID,
        m_axi_Y_ARREADY => gmem_ARREADY,
        m_axi_Y_ARADDR => grp_getVal_fu_234_m_axi_Y_ARADDR,
        m_axi_Y_ARID => grp_getVal_fu_234_m_axi_Y_ARID,
        m_axi_Y_ARLEN => grp_getVal_fu_234_m_axi_Y_ARLEN,
        m_axi_Y_ARSIZE => grp_getVal_fu_234_m_axi_Y_ARSIZE,
        m_axi_Y_ARBURST => grp_getVal_fu_234_m_axi_Y_ARBURST,
        m_axi_Y_ARLOCK => grp_getVal_fu_234_m_axi_Y_ARLOCK,
        m_axi_Y_ARCACHE => grp_getVal_fu_234_m_axi_Y_ARCACHE,
        m_axi_Y_ARPROT => grp_getVal_fu_234_m_axi_Y_ARPROT,
        m_axi_Y_ARQOS => grp_getVal_fu_234_m_axi_Y_ARQOS,
        m_axi_Y_ARREGION => grp_getVal_fu_234_m_axi_Y_ARREGION,
        m_axi_Y_ARUSER => grp_getVal_fu_234_m_axi_Y_ARUSER,
        m_axi_Y_RVALID => gmem_RVALID,
        m_axi_Y_RREADY => grp_getVal_fu_234_m_axi_Y_RREADY,
        m_axi_Y_RDATA => gmem_RDATA,
        m_axi_Y_RLAST => gmem_RLAST,
        m_axi_Y_RID => gmem_RID,
        m_axi_Y_RUSER => gmem_RUSER,
        m_axi_Y_RRESP => gmem_RRESP,
        m_axi_Y_BVALID => ap_const_logic_0,
        m_axi_Y_BREADY => grp_getVal_fu_234_m_axi_Y_BREADY,
        m_axi_Y_BRESP => ap_const_lv2_0,
        m_axi_Y_BID => ap_const_lv1_0,
        m_axi_Y_BUSER => ap_const_lv1_0,
        ap_ce => grp_getVal_fu_234_ap_ce,
        index => fullIndex_reg_859,
        xDiff => grp_getVal_fu_234_xDiff,
        yDiff => grp_getVal_fu_234_yDiff,
        inter_pix1 => inter_pix_read_reg_754,
        ap_return => grp_getVal_fu_234_ap_return,
        Y_blk_n_AR => grp_getVal_fu_234_Y_blk_n_AR,
        Y_blk_n_R => grp_getVal_fu_234_Y_blk_n_R);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state32))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state32) and (((ap_block_pp0_stage79_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage79)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state32 xor ap_const_logic_1);
                elsif ((((ap_block_pp0_stage79_flag00011011 = ap_const_boolean_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage79)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_getVal_fu_234_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_getVal_fu_234_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_416_p2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00011001 = ap_const_boolean_0)))) then 
                    ap_reg_grp_getVal_fu_234_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_getVal_fu_234_ap_ready)) then 
                    ap_reg_grp_getVal_fu_234_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem2_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem2_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_gmem2_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_logic_1 = gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_logic_1 = gmem2_AWREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_1 = gmem2_AWREADY) and (ap_block_pp0_stage2_flag00001001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_gmem2_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem2_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem2_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_block_state3_io = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_gmem2_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_const_logic_1 = gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_logic_1 = gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_logic_1 = gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_1 = gmem2_WREADY) and (ap_block_pp0_stage3_flag00001001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_gmem2_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((gmem2_BVALID = ap_const_logic_1)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    i1_reg_168 <= ap_const_lv16_9C80;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    i1_reg_168 <= i_2_reg_798;
                end if;
            end if; 
        end if;
    end process;

    i2_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond2_fu_297_p2 = ap_const_lv1_1))) then 
                i2_reg_179 <= ap_const_lv21_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (gmem2_BVALID = ap_const_logic_1))) then 
                i2_reg_179 <= i_3_reg_816;
            end if; 
        end if;
    end process;

    i3_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = tmp_3_fu_328_p2))) then 
                i3_reg_190 <= ap_const_lv21_77F;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (gmem2_BVALID = ap_const_logic_1))) then 
                i3_reg_190 <= i_4_reg_835;
            end if; 
        end if;
    end process;

    i_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_block_state3_io = ap_const_boolean_0))) then 
                i_reg_157 <= i_1_fu_283_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then 
                i_reg_157 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then 
                indvar_flatten_reg_201 <= ap_const_lv21_0;
            elsif (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
                indvar_flatten_reg_201 <= indvar_flatten_next_reg_849;
            end if; 
        end if;
    end process;

    x_assign_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then 
                x_assign_reg_223 <= ap_const_lv11_1;
            elsif (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
                x_assign_reg_223 <= x_reg_865;
            end if; 
        end if;
    end process;

    y_assign_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then 
                y_assign_reg_212 <= ap_const_lv11_1;
            elsif (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
                y_assign_reg_212 <= y_assign_mid2_reg_854;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond_flatten_reg_845 <= exitcond_flatten_reg_845;
                exitcond_flatten_reg_845 <= exitcond_flatten_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0))) then
                edge_val_1_i_reg_950 <= edge_val_1_i_fu_731_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_416_p2))) then
                fullIndex_reg_859 <= fullIndex_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = exitcond2_fu_297_p2))) then
                i_2_reg_798 <= i_2_fu_308_p2;
                out_pix4_sum5_reg_793 <= out_pix4_sum5_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_3_fu_328_p2 = ap_const_lv1_1))) then
                i_3_reg_816 <= i_3_fu_339_p2;
                out_pix4_sum8_reg_811 <= out_pix4_sum8_fu_334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_1 = tmp_5_fu_359_p2))) then
                i_4_reg_835 <= i_4_fu_370_p2;
                out_pix4_sum7_reg_830 <= out_pix4_sum7_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                indvar_flatten_next_reg_849 <= indvar_flatten_next_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                inter_pix_read_reg_754 <= inter_pix;
                out_pix3_reg_759 <= out_pix(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00011001 = ap_const_boolean_0))) then
                out_pix4_sum6_reg_915 <= out_pix4_sum6_fu_614_p2;
                tmp_18_reg_910 <= tmp_18_fu_610_p1;
                x_weight_2_reg_900 <= x_weight_2_fu_598_p2;
                y_weight_2_reg_905 <= y_weight_2_fu_604_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)))) then
                reg_250 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0))) then
                tmp_11_reg_875 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0))) then
                tmp_13_reg_880 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0))) then
                tmp_14_reg_885 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0))) then
                tmp_15_reg_890 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00011001 = ap_const_boolean_0))) then
                tmp_16_reg_895 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then
                    tmp_1_cast_reg_770(29 downto 0) <= tmp_1_cast_fu_267_p1(29 downto 0);
                    tmp_1_reg_765(29 downto 0) <= tmp_1_fu_264_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0))) then
                tmp_20_reg_925 <= tmp_20_fu_656_p2;
                tmp_21_reg_930 <= tmp_21_fu_661_p2;
                tmp_23_reg_940 <= tmp_23_fu_673_p1;
                tmp_24_reg_945 <= tmp_24_fu_677_p2;
                tmp_4_reg_935 <= tmp_4_fu_667_p2;
                tmp_s_reg_920 <= tmp_s_fu_650_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0))) then
                tmp_7_reg_870 <= grp_getVal_fu_234_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_flatten_fu_416_p2))) then
                x_reg_865 <= x_fu_504_p2;
                y_assign_mid2_reg_854 <= y_assign_mid2_fu_486_p3;
            end if;
        end if;
    end process;
    tmp_1_reg_765(31 downto 30) <= "00";
    tmp_1_cast_reg_770(30) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state3, tmp_fu_277_p2, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_pp0_stage8, gmem2_BVALID, ap_sig_ioackin_gmem2_AWREADY, ap_sig_ioackin_gmem2_WREADY, ap_block_state3_io, ap_CS_fsm_state8, exitcond2_fu_297_p2, ap_CS_fsm_state16, tmp_3_fu_328_p2, tmp_5_fu_359_p2, ap_CS_fsm_state24, exitcond_flatten_fu_416_p2, ap_block_pp0_stage0_flag00011011, ap_block_pp0_stage79_flag00011011, ap_block_pp0_stage8_flag00011011, ap_block_pp0_stage1_flag00011011, ap_block_pp0_stage2_flag00011011, ap_block_pp0_stage3_flag00011011, ap_block_pp0_stage4_flag00011011, ap_block_pp0_stage5_flag00011011, ap_block_pp0_stage6_flag00011011, ap_block_pp0_stage7_flag00011011, ap_block_pp0_stage9_flag00011011, ap_block_pp0_stage10_flag00011011, ap_block_pp0_stage11_flag00011011, ap_block_pp0_stage12_flag00011011, ap_block_pp0_stage13_flag00011011, ap_block_pp0_stage14_flag00011011, ap_block_pp0_stage15_flag00011011, ap_block_pp0_stage16_flag00011011, ap_block_pp0_stage17_flag00011011, ap_block_pp0_stage18_flag00011011, ap_block_pp0_stage19_flag00011011, ap_block_pp0_stage20_flag00011011, ap_block_pp0_stage21_flag00011011, ap_block_pp0_stage22_flag00011011, ap_block_pp0_stage23_flag00011011, ap_block_pp0_stage24_flag00011011, ap_block_pp0_stage25_flag00011011, ap_block_pp0_stage26_flag00011011, ap_block_pp0_stage27_flag00011011, ap_block_pp0_stage28_flag00011011, ap_block_pp0_stage29_flag00011011, ap_block_pp0_stage30_flag00011011, ap_block_pp0_stage31_flag00011011, ap_block_pp0_stage32_flag00011011, ap_block_pp0_stage33_flag00011011, ap_block_pp0_stage34_flag00011011, ap_block_pp0_stage35_flag00011011, ap_block_pp0_stage36_flag00011011, ap_block_pp0_stage37_flag00011011, ap_block_pp0_stage38_flag00011011, ap_block_pp0_stage39_flag00011011, ap_block_pp0_stage40_flag00011011, ap_block_pp0_stage41_flag00011011, ap_block_pp0_stage42_flag00011011, ap_block_pp0_stage43_flag00011011, ap_block_pp0_stage44_flag00011011, ap_block_pp0_stage45_flag00011011, ap_block_pp0_stage46_flag00011011, ap_block_pp0_stage47_flag00011011, ap_block_pp0_stage48_flag00011011, ap_block_pp0_stage49_flag00011011, ap_block_pp0_stage50_flag00011011, ap_block_pp0_stage51_flag00011011, ap_block_pp0_stage52_flag00011011, ap_block_pp0_stage53_flag00011011, ap_block_pp0_stage54_flag00011011, ap_block_pp0_stage55_flag00011011, ap_block_pp0_stage56_flag00011011, ap_block_pp0_stage57_flag00011011, ap_block_pp0_stage58_flag00011011, ap_block_pp0_stage59_flag00011011, ap_block_pp0_stage60_flag00011011, ap_block_pp0_stage61_flag00011011, ap_block_pp0_stage62_flag00011011, ap_block_pp0_stage63_flag00011011, ap_block_pp0_stage64_flag00011011, ap_block_pp0_stage65_flag00011011, ap_block_pp0_stage66_flag00011011, ap_block_pp0_stage67_flag00011011, ap_block_pp0_stage68_flag00011011, ap_block_pp0_stage69_flag00011011, ap_block_pp0_stage70_flag00011011, ap_block_pp0_stage71_flag00011011, ap_block_pp0_stage72_flag00011011, ap_block_pp0_stage73_flag00011011, ap_block_pp0_stage74_flag00011011, ap_block_pp0_stage75_flag00011011, ap_block_pp0_stage76_flag00011011, ap_block_pp0_stage77_flag00011011, ap_block_pp0_stage78_flag00011011)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_block_state3_io = ap_const_boolean_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_block_state3_io = ap_const_boolean_0) and (tmp_fu_277_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (gmem2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond2_fu_297_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (gmem2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_lv1_0 = tmp_3_fu_328_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (gmem2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = tmp_5_fu_359_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_sig_ioackin_gmem2_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_sig_ioackin_gmem2_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (gmem2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten_fu_416_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_flatten_fu_416_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state121;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if (((ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011011 = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state121;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_block_pp0_stage14_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_block_pp0_stage15_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_block_pp0_stage16_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_block_pp0_stage17_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_block_pp0_stage18_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_block_pp0_stage19_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_block_pp0_stage20_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_block_pp0_stage21_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_block_pp0_stage22_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_block_pp0_stage23_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_block_pp0_stage24_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_block_pp0_stage25_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_block_pp0_stage26_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_block_pp0_stage27_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_block_pp0_stage28_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_block_pp0_stage29_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_block_pp0_stage30_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_block_pp0_stage31_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_block_pp0_stage32_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_block_pp0_stage33_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_block_pp0_stage34_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_block_pp0_stage35_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_block_pp0_stage36_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_block_pp0_stage37_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_block_pp0_stage38_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_block_pp0_stage39_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_pp0_stage40 => 
                if ((ap_block_pp0_stage40_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                end if;
            when ap_ST_fsm_pp0_stage41 => 
                if ((ap_block_pp0_stage41_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                end if;
            when ap_ST_fsm_pp0_stage42 => 
                if ((ap_block_pp0_stage42_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                end if;
            when ap_ST_fsm_pp0_stage43 => 
                if ((ap_block_pp0_stage43_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                end if;
            when ap_ST_fsm_pp0_stage44 => 
                if ((ap_block_pp0_stage44_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                end if;
            when ap_ST_fsm_pp0_stage45 => 
                if ((ap_block_pp0_stage45_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                end if;
            when ap_ST_fsm_pp0_stage46 => 
                if ((ap_block_pp0_stage46_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                end if;
            when ap_ST_fsm_pp0_stage47 => 
                if ((ap_block_pp0_stage47_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                end if;
            when ap_ST_fsm_pp0_stage48 => 
                if ((ap_block_pp0_stage48_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                end if;
            when ap_ST_fsm_pp0_stage49 => 
                if ((ap_block_pp0_stage49_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                end if;
            when ap_ST_fsm_pp0_stage50 => 
                if ((ap_block_pp0_stage50_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                end if;
            when ap_ST_fsm_pp0_stage51 => 
                if ((ap_block_pp0_stage51_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                end if;
            when ap_ST_fsm_pp0_stage52 => 
                if ((ap_block_pp0_stage52_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                end if;
            when ap_ST_fsm_pp0_stage53 => 
                if ((ap_block_pp0_stage53_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                end if;
            when ap_ST_fsm_pp0_stage54 => 
                if ((ap_block_pp0_stage54_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                end if;
            when ap_ST_fsm_pp0_stage55 => 
                if ((ap_block_pp0_stage55_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                end if;
            when ap_ST_fsm_pp0_stage56 => 
                if ((ap_block_pp0_stage56_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                end if;
            when ap_ST_fsm_pp0_stage57 => 
                if ((ap_block_pp0_stage57_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                end if;
            when ap_ST_fsm_pp0_stage58 => 
                if ((ap_block_pp0_stage58_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                end if;
            when ap_ST_fsm_pp0_stage59 => 
                if ((ap_block_pp0_stage59_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                end if;
            when ap_ST_fsm_pp0_stage60 => 
                if ((ap_block_pp0_stage60_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                end if;
            when ap_ST_fsm_pp0_stage61 => 
                if ((ap_block_pp0_stage61_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                end if;
            when ap_ST_fsm_pp0_stage62 => 
                if ((ap_block_pp0_stage62_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                end if;
            when ap_ST_fsm_pp0_stage63 => 
                if ((ap_block_pp0_stage63_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage64;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                end if;
            when ap_ST_fsm_pp0_stage64 => 
                if ((ap_block_pp0_stage64_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage65;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage64;
                end if;
            when ap_ST_fsm_pp0_stage65 => 
                if ((ap_block_pp0_stage65_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage66;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage65;
                end if;
            when ap_ST_fsm_pp0_stage66 => 
                if ((ap_block_pp0_stage66_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage67;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage66;
                end if;
            when ap_ST_fsm_pp0_stage67 => 
                if ((ap_block_pp0_stage67_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage68;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage67;
                end if;
            when ap_ST_fsm_pp0_stage68 => 
                if ((ap_block_pp0_stage68_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage69;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage68;
                end if;
            when ap_ST_fsm_pp0_stage69 => 
                if ((ap_block_pp0_stage69_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage70;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage69;
                end if;
            when ap_ST_fsm_pp0_stage70 => 
                if ((ap_block_pp0_stage70_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage71;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage70;
                end if;
            when ap_ST_fsm_pp0_stage71 => 
                if ((ap_block_pp0_stage71_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage72;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage71;
                end if;
            when ap_ST_fsm_pp0_stage72 => 
                if ((ap_block_pp0_stage72_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage73;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage72;
                end if;
            when ap_ST_fsm_pp0_stage73 => 
                if ((ap_block_pp0_stage73_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage74;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage73;
                end if;
            when ap_ST_fsm_pp0_stage74 => 
                if ((ap_block_pp0_stage74_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage75;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage74;
                end if;
            when ap_ST_fsm_pp0_stage75 => 
                if ((ap_block_pp0_stage75_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage76;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage75;
                end if;
            when ap_ST_fsm_pp0_stage76 => 
                if ((ap_block_pp0_stage76_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage77;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage76;
                end if;
            when ap_ST_fsm_pp0_stage77 => 
                if ((ap_block_pp0_stage77_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage78;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage77;
                end if;
            when ap_ST_fsm_pp0_stage78 => 
                if ((ap_block_pp0_stage78_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage79;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage78;
                end if;
            when ap_ST_fsm_pp0_stage79 => 
                if ((ap_block_pp0_stage79_flag00011011 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage79;
                end if;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(42);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(43);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(44);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(45);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(46);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(47);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(48);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(49);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(50);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(51);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(52);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(53);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(54);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(55);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(56);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(57);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(58);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(59);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(60);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(61);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(62);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(63);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(64);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(65);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(66);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(67);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(68);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(69);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(70);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage40 <= ap_CS_fsm(71);
    ap_CS_fsm_pp0_stage41 <= ap_CS_fsm(72);
    ap_CS_fsm_pp0_stage42 <= ap_CS_fsm(73);
    ap_CS_fsm_pp0_stage43 <= ap_CS_fsm(74);
    ap_CS_fsm_pp0_stage44 <= ap_CS_fsm(75);
    ap_CS_fsm_pp0_stage45 <= ap_CS_fsm(76);
    ap_CS_fsm_pp0_stage46 <= ap_CS_fsm(77);
    ap_CS_fsm_pp0_stage47 <= ap_CS_fsm(78);
    ap_CS_fsm_pp0_stage48 <= ap_CS_fsm(79);
    ap_CS_fsm_pp0_stage49 <= ap_CS_fsm(80);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage50 <= ap_CS_fsm(81);
    ap_CS_fsm_pp0_stage51 <= ap_CS_fsm(82);
    ap_CS_fsm_pp0_stage52 <= ap_CS_fsm(83);
    ap_CS_fsm_pp0_stage53 <= ap_CS_fsm(84);
    ap_CS_fsm_pp0_stage54 <= ap_CS_fsm(85);
    ap_CS_fsm_pp0_stage55 <= ap_CS_fsm(86);
    ap_CS_fsm_pp0_stage56 <= ap_CS_fsm(87);
    ap_CS_fsm_pp0_stage57 <= ap_CS_fsm(88);
    ap_CS_fsm_pp0_stage58 <= ap_CS_fsm(89);
    ap_CS_fsm_pp0_stage59 <= ap_CS_fsm(90);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage60 <= ap_CS_fsm(91);
    ap_CS_fsm_pp0_stage61 <= ap_CS_fsm(92);
    ap_CS_fsm_pp0_stage62 <= ap_CS_fsm(93);
    ap_CS_fsm_pp0_stage63 <= ap_CS_fsm(94);
    ap_CS_fsm_pp0_stage64 <= ap_CS_fsm(95);
    ap_CS_fsm_pp0_stage65 <= ap_CS_fsm(96);
    ap_CS_fsm_pp0_stage66 <= ap_CS_fsm(97);
    ap_CS_fsm_pp0_stage67 <= ap_CS_fsm(98);
    ap_CS_fsm_pp0_stage68 <= ap_CS_fsm(99);
    ap_CS_fsm_pp0_stage69 <= ap_CS_fsm(100);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage70 <= ap_CS_fsm(101);
    ap_CS_fsm_pp0_stage71 <= ap_CS_fsm(102);
    ap_CS_fsm_pp0_stage72 <= ap_CS_fsm(103);
    ap_CS_fsm_pp0_stage73 <= ap_CS_fsm(104);
    ap_CS_fsm_pp0_stage74 <= ap_CS_fsm(105);
    ap_CS_fsm_pp0_stage75 <= ap_CS_fsm(106);
    ap_CS_fsm_pp0_stage76 <= ap_CS_fsm(107);
    ap_CS_fsm_pp0_stage77 <= ap_CS_fsm(108);
    ap_CS_fsm_pp0_stage78 <= ap_CS_fsm(109);
    ap_CS_fsm_pp0_stage79 <= ap_CS_fsm(110);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(40);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state121 <= ap_CS_fsm(111);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_flag00011001 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_flag00011011 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage10_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage10_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage10_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage10_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage11_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage13_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage14_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage20_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage20_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage20_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage21_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage23_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage24_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_flag00001001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state114_io)
    begin
                ap_block_pp0_stage2_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state114_io));
    end process;


    ap_block_pp0_stage2_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state114_io)
    begin
                ap_block_pp0_stage2_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state114_io));
    end process;

        ap_block_pp0_stage30_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage30_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage30_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage30_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage30_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage31_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage33_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage33_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage34_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_flag00001001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage3_flag00001001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage3_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state115_io)
    begin
                ap_block_pp0_stage3_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state115_io));
    end process;


    ap_block_pp0_stage3_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845, ap_enable_reg_pp0_iter1, ap_block_state115_io)
    begin
                ap_block_pp0_stage3_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state115_io)));
    end process;

        ap_block_pp0_stage40_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage40_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage40_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage40_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage40_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage41_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage43_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage43_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage44_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage50_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage50_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage50_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage50_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage51_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage53_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage53_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage54_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage60_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage60_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage60_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage60_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage61_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage63_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage63_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage64_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage64_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage64_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage65_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage65_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage65_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage66_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage66_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage66_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage67_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage67_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage67_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage68_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage68_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage68_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage69_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage69_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage69_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage70_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage70_flag00011001_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage70_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;


    ap_block_pp0_stage70_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage70_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage71_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage71_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage71_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage72_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage72_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage72_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage73_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage73_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage73_flag00011011_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845)
    begin
                ap_block_pp0_stage73_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_pp0_stage74_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage74_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage74_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage75_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage75_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage75_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage76_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage76_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage76_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage77_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage77_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage77_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage78_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage78_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage78_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage79_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage79_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage79_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_flag00011001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond_flatten_reg_845, gmem2_BVALID)
    begin
                ap_block_pp0_stage8_flag00011001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = gmem2_BVALID));
    end process;


    ap_block_pp0_stage8_flag00011011_assign_proc : process(ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_exitcond_flatten_reg_845, gmem2_BVALID)
    begin
                ap_block_pp0_stage8_flag00011011 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = gmem2_BVALID));
    end process;

        ap_block_pp0_stage9_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_flag00011001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_flag00011011 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp0_stage68_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp0_stage68_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage69_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage69_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state102_pp0_stage70_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state102_pp0_stage70_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state103_pp0_stage71_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage72_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage72_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state105_pp0_stage73_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state105_pp0_stage73_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state105_pp0_stage73_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage74_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage74_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage75_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage75_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage76_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage76_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage77_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage77_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp0_stage78_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp0_stage78_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage79_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage79_iter0_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state112_pp0_stage0_iter1_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state112_pp0_stage0_iter1 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state113_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state114_io_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_sig_ioackin_gmem2_AWREADY)
    begin
                ap_block_state114_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_sig_ioackin_gmem2_AWREADY));
    end process;

        ap_block_state114_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state115_io_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_sig_ioackin_gmem2_WREADY)
    begin
                ap_block_state115_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_sig_ioackin_gmem2_WREADY));
    end process;

        ap_block_state115_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp0_stage3_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp0_stage4_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp0_stage5_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp0_stage6_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp0_stage7_iter1_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state120_pp0_stage8_iter1_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_845, gmem2_BVALID)
    begin
                ap_block_state120_pp0_stage8_iter1 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = gmem2_BVALID));
    end process;


    ap_block_state120_pp0_stage8_iter1_ignore_call18_assign_proc : process(ap_reg_pp0_iter1_exitcond_flatten_reg_845, gmem2_BVALID)
    begin
                ap_block_state120_pp0_stage8_iter1_ignore_call18 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = gmem2_BVALID));
    end process;

        ap_block_state32_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state35_pp0_stage3_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state35_pp0_stage3_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state35_pp0_stage3_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage5_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage6_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage7_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(tmp_fu_277_p2, ap_sig_ioackin_gmem2_WREADY)
    begin
                ap_block_state3_io <= ((ap_const_lv1_0 = tmp_fu_277_p2) and (ap_const_logic_0 = ap_sig_ioackin_gmem2_WREADY));
    end process;

        ap_block_state40_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage8_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage9_iter0_ignore_call18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state42_pp0_stage10_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state42_pp0_stage10_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state43_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage11_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage12_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state45_pp0_stage13_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state45_pp0_stage13_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state45_pp0_stage13_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage14_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage15_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage16_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage17_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage18_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage19_iter0_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state52_pp0_stage20_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state52_pp0_stage20_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state53_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage21_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage22_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state55_pp0_stage23_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state55_pp0_stage23_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state55_pp0_stage23_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage24_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage25_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage26_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage27_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage28_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage29_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state62_pp0_stage30_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state62_pp0_stage30_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state63_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage31_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage32_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state65_pp0_stage33_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state65_pp0_stage33_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state65_pp0_stage33_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage34_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage35_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage36_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage37_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage38_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage39_iter0_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state72_pp0_stage40_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state72_pp0_stage40_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state73_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage41_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage42_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state75_pp0_stage43_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state75_pp0_stage43_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state75_pp0_stage43_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage44_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage45_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage46_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage47_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage48_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage49_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage49_iter0_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state82_pp0_stage50_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state82_pp0_stage50_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state83_pp0_stage51_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage51_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage52_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage52_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state85_pp0_stage53_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state85_pp0_stage53_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state85_pp0_stage53_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage54_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage54_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage55_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage55_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage56_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage56_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage57_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage57_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage58_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage58_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage59_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage59_iter0_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state92_pp0_stage60_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state92_pp0_stage60_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state93_pp0_stage61_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage61_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage62_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage62_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state95_pp0_stage63_iter0_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, grp_getVal_fu_234_Y_blk_n_R, exitcond_flatten_reg_845)
    begin
                ap_block_state95_pp0_stage63_iter0 <= ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_0 = (grp_getVal_fu_234_Y_blk_n_AR and grp_getVal_fu_234_Y_blk_n_R)));
    end process;

        ap_block_state95_pp0_stage63_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage64_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage64_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage65_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage65_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage66_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage66_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage67_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage67_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2416_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_block_pp0_stage2_flag00001001)
    begin
                ap_condition_2416 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_block_pp0_stage2_flag00001001 = ap_const_boolean_0));
    end process;


    ap_condition_pp0_exit_iter0_state32_assign_proc : process(exitcond_flatten_fu_416_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_flatten_fu_416_p2)) then 
            ap_condition_pp0_exit_iter0_state32 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state121)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state121)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_gmem2_AWREADY_assign_proc : process(gmem2_AWREADY, ap_reg_ioackin_gmem2_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) then 
            ap_sig_ioackin_gmem2_AWREADY <= gmem2_AWREADY;
        else 
            ap_sig_ioackin_gmem2_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem2_WREADY_assign_proc : process(gmem2_WREADY, ap_reg_ioackin_gmem2_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) then 
            ap_sig_ioackin_gmem2_WREADY <= gmem2_WREADY;
        else 
            ap_sig_ioackin_gmem2_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    edge_val_1_i_fu_731_p3 <= 
        p_i_fu_717_p3 when (tmp_26_fu_725_p2(0) = '1') else 
        edge_val_fu_699_p2;
    edge_val_fu_699_p2 <= (tmp_9_fu_693_p2 xor ap_const_lv8_FF);
    exitcond2_fu_297_p2 <= "1" when (i1_reg_168 = ap_const_lv16_A400) else "0";
    exitcond_flatten_fu_416_p2 <= "1" when (indvar_flatten_phi_fu_205_p4 = ap_const_lv21_1F8C94) else "0";
    exitcond_fu_428_p2 <= "1" when (x_assign_phi_fu_227_p4 = ap_const_lv11_77F) else "0";
        fullIndex_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(fullIndex_reg_859),32));

    fullIndex_fu_498_p2 <= std_logic_vector(unsigned(x_assign_cast4_fu_494_p1) + unsigned(tmp_8_mid2_fu_478_p3));

    gmem2_AWADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, tmp_1_fu_264_p1, out_pix4_sum6_reg_915, out_pix4_sum5_cast_fu_314_p1, out_pix4_sum8_cast_fu_345_p1, out_pix4_sum7_cast_fu_376_p1, ap_reg_ioackin_gmem2_AWREADY, ap_condition_2416)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) then
            if ((ap_condition_2416 = ap_const_boolean_1)) then 
                gmem2_AWADDR <= out_pix4_sum6_reg_915;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gmem2_AWADDR <= out_pix4_sum7_cast_fu_376_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                gmem2_AWADDR <= out_pix4_sum8_cast_fu_345_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                gmem2_AWADDR <= out_pix4_sum5_cast_fu_314_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                gmem2_AWADDR <= tmp_1_fu_264_p1;
            else 
                gmem2_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem2_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_AWLEN_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_reg_ioackin_gmem2_AWREADY, ap_block_pp0_stage2_flag00001001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY) and (ap_block_pp0_stage2_flag00001001 = ap_const_boolean_0)))) then 
            gmem2_AWLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY))) then 
            gmem2_AWLEN <= ap_const_lv32_780;
        else 
            gmem2_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_pp0_stage2, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_reg_ioackin_gmem2_AWREADY, ap_block_pp0_stage2_flag00001001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_AWREADY) and (ap_block_pp0_stage2_flag00001001 = ap_const_boolean_0)))) then 
            gmem2_AWVALID <= ap_const_logic_1;
        else 
            gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_BREADY_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state31, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage8, gmem2_BVALID, ap_block_pp0_stage8_flag00011001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (gmem2_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (gmem2_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (gmem2_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (gmem2_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0)))) then 
            gmem2_BREADY <= ap_const_logic_1;
        else 
            gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_WDATA_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, tmp_fu_277_p2, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_reg_ioackin_gmem2_WREADY, ap_block_pp0_stage3_flag00001001, tmp_19_fu_745_p5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY) and (ap_block_pp0_stage3_flag00001001 = ap_const_boolean_0))) then 
            gmem2_WDATA <= tmp_19_fu_745_p5;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)))) then 
            gmem2_WDATA <= ap_const_lv32_0;
        else 
            gmem2_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, tmp_fu_277_p2, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_reg_ioackin_gmem2_WREADY, ap_block_pp0_stage3_flag00001001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_0 = ap_reg_ioackin_gmem2_WREADY) and (ap_block_pp0_stage3_flag00001001 = ap_const_boolean_0)))) then 
            gmem2_WVALID <= ap_const_logic_1;
        else 
            gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AW_assign_proc : process(m_axi_gmem2_AWREADY, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_reg_pp0_iter1_exitcond_flatten_reg_845)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845)))) then 
            gmem2_blk_n_AW <= m_axi_gmem2_AWREADY;
        else 
            gmem2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_B_assign_proc : process(m_axi_gmem2_BVALID, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state31, ap_reg_pp0_iter1_exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_flag00000000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00000000 = ap_const_boolean_0)))) then 
            gmem2_blk_n_B <= m_axi_gmem2_BVALID;
        else 
            gmem2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_W_assign_proc : process(m_axi_gmem2_WREADY, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_flag00000000, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, tmp_fu_277_p2, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_reg_pp0_iter1_exitcond_flatten_reg_845)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = tmp_fu_277_p2)) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond_flatten_reg_845)))) then 
            gmem2_blk_n_W <= m_axi_gmem2_WREADY;
        else 
            gmem2_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3_flag00000000, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_flag00000000, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_flag00000000, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_flag00000000, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_flag00000000, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_flag00000000, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_flag00000000, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_flag00000000, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50_flag00000000, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage53_flag00000000, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage60_flag00000000, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage63_flag00000000, ap_CS_fsm_pp0_stage70, ap_block_pp0_stage70_flag00000000, ap_CS_fsm_pp0_stage73, ap_block_pp0_stage73_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_flag00000000, ap_CS_fsm_pp0_stage71, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage79, grp_getVal_fu_234_m_axi_Y_ARVALID, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage42, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage46, ap_CS_fsm_pp0_stage47, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage49, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage52, ap_CS_fsm_pp0_stage54, ap_CS_fsm_pp0_stage55, ap_CS_fsm_pp0_stage56, ap_CS_fsm_pp0_stage57, ap_CS_fsm_pp0_stage58, ap_CS_fsm_pp0_stage59, ap_CS_fsm_pp0_stage61, ap_CS_fsm_pp0_stage62, ap_CS_fsm_pp0_stage64, ap_CS_fsm_pp0_stage65, ap_CS_fsm_pp0_stage66, ap_CS_fsm_pp0_stage67, ap_CS_fsm_pp0_stage68, ap_CS_fsm_pp0_stage69, ap_CS_fsm_pp0_stage72, ap_CS_fsm_pp0_stage74, ap_CS_fsm_pp0_stage75, ap_CS_fsm_pp0_stage76, ap_CS_fsm_pp0_stage77, ap_CS_fsm_pp0_stage78, ap_block_pp0_stage1_flag00000000, ap_block_pp0_stage11_flag00000000, ap_block_pp0_stage21_flag00000000, ap_block_pp0_stage31_flag00000000, ap_block_pp0_stage41_flag00000000, ap_block_pp0_stage51_flag00000000, ap_block_pp0_stage61_flag00000000, ap_block_pp0_stage71_flag00000000, ap_block_pp0_stage4_flag00000000, ap_block_pp0_stage5_flag00000000, ap_block_pp0_stage6_flag00000000, ap_block_pp0_stage7_flag00000000, ap_block_pp0_stage9_flag00000000, ap_block_pp0_stage12_flag00000000, ap_block_pp0_stage14_flag00000000, ap_block_pp0_stage15_flag00000000, ap_block_pp0_stage16_flag00000000, ap_block_pp0_stage17_flag00000000, ap_block_pp0_stage18_flag00000000, ap_block_pp0_stage19_flag00000000, ap_block_pp0_stage22_flag00000000, ap_block_pp0_stage24_flag00000000, ap_block_pp0_stage25_flag00000000, ap_block_pp0_stage26_flag00000000, ap_block_pp0_stage27_flag00000000, ap_block_pp0_stage28_flag00000000, ap_block_pp0_stage29_flag00000000, ap_block_pp0_stage32_flag00000000, ap_block_pp0_stage34_flag00000000, ap_block_pp0_stage35_flag00000000, ap_block_pp0_stage36_flag00000000, ap_block_pp0_stage37_flag00000000, ap_block_pp0_stage38_flag00000000, ap_block_pp0_stage39_flag00000000, ap_block_pp0_stage42_flag00000000, ap_block_pp0_stage44_flag00000000, ap_block_pp0_stage45_flag00000000, ap_block_pp0_stage46_flag00000000, ap_block_pp0_stage47_flag00000000, ap_block_pp0_stage48_flag00000000, ap_block_pp0_stage49_flag00000000, ap_block_pp0_stage52_flag00000000, ap_block_pp0_stage54_flag00000000, ap_block_pp0_stage55_flag00000000, ap_block_pp0_stage56_flag00000000, ap_block_pp0_stage57_flag00000000, ap_block_pp0_stage58_flag00000000, ap_block_pp0_stage59_flag00000000, ap_block_pp0_stage62_flag00000000, ap_block_pp0_stage64_flag00000000, ap_block_pp0_stage65_flag00000000, ap_block_pp0_stage66_flag00000000, ap_block_pp0_stage67_flag00000000, ap_block_pp0_stage68_flag00000000, ap_block_pp0_stage69_flag00000000, ap_block_pp0_stage72_flag00000000, ap_block_pp0_stage74_flag00000000, ap_block_pp0_stage75_flag00000000, ap_block_pp0_stage76_flag00000000, ap_block_pp0_stage77_flag00000000, ap_block_pp0_stage78_flag00000000, ap_block_pp0_stage79_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (exitcond_flatten_reg_845 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage73) and (ap_block_pp0_stage73_flag00000000 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage64) and (ap_block_pp0_stage64_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage65) and (ap_block_pp0_stage65_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage66) and (ap_block_pp0_stage66_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage67) and (ap_block_pp0_stage67_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage68) and (ap_block_pp0_stage68_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage69) and (ap_block_pp0_stage69_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage72) and (ap_block_pp0_stage72_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage74) and (ap_block_pp0_stage74_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage75) and (ap_block_pp0_stage75_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage76) and (ap_block_pp0_stage76_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage77) and (ap_block_pp0_stage77_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage78) and (ap_block_pp0_stage78_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage79) and (ap_block_pp0_stage79_flag00000000 = ap_const_boolean_0)))) then 
            gmem_ARVALID <= grp_getVal_fu_234_m_axi_Y_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3_flag00000000, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_flag00000000, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_flag00000000, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_flag00000000, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_flag00000000, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_flag00000000, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_flag00000000, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_flag00000000, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50_flag00000000, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage53_flag00000000, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage60_flag00000000, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage63_flag00000000, ap_CS_fsm_pp0_stage70, ap_block_pp0_stage70_flag00000000, ap_CS_fsm_pp0_stage73, ap_block_pp0_stage73_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_flag00000000, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_flag00000000, ap_CS_fsm_pp0_stage71, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage79, grp_getVal_fu_234_m_axi_Y_RREADY, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage42, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage46, ap_CS_fsm_pp0_stage47, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage49, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage52, ap_CS_fsm_pp0_stage54, ap_CS_fsm_pp0_stage55, ap_CS_fsm_pp0_stage56, ap_CS_fsm_pp0_stage57, ap_CS_fsm_pp0_stage58, ap_CS_fsm_pp0_stage59, ap_CS_fsm_pp0_stage61, ap_CS_fsm_pp0_stage62, ap_CS_fsm_pp0_stage64, ap_CS_fsm_pp0_stage65, ap_CS_fsm_pp0_stage66, ap_CS_fsm_pp0_stage67, ap_CS_fsm_pp0_stage68, ap_CS_fsm_pp0_stage69, ap_CS_fsm_pp0_stage72, ap_CS_fsm_pp0_stage74, ap_CS_fsm_pp0_stage75, ap_CS_fsm_pp0_stage76, ap_CS_fsm_pp0_stage77, ap_CS_fsm_pp0_stage78, ap_block_pp0_stage1_flag00000000, ap_block_pp0_stage11_flag00000000, ap_block_pp0_stage21_flag00000000, ap_block_pp0_stage31_flag00000000, ap_block_pp0_stage41_flag00000000, ap_block_pp0_stage51_flag00000000, ap_block_pp0_stage61_flag00000000, ap_block_pp0_stage71_flag00000000, ap_block_pp0_stage4_flag00000000, ap_block_pp0_stage5_flag00000000, ap_block_pp0_stage6_flag00000000, ap_block_pp0_stage7_flag00000000, ap_block_pp0_stage9_flag00000000, ap_block_pp0_stage12_flag00000000, ap_block_pp0_stage14_flag00000000, ap_block_pp0_stage15_flag00000000, ap_block_pp0_stage16_flag00000000, ap_block_pp0_stage17_flag00000000, ap_block_pp0_stage18_flag00000000, ap_block_pp0_stage19_flag00000000, ap_block_pp0_stage22_flag00000000, ap_block_pp0_stage24_flag00000000, ap_block_pp0_stage25_flag00000000, ap_block_pp0_stage26_flag00000000, ap_block_pp0_stage27_flag00000000, ap_block_pp0_stage28_flag00000000, ap_block_pp0_stage29_flag00000000, ap_block_pp0_stage32_flag00000000, ap_block_pp0_stage34_flag00000000, ap_block_pp0_stage35_flag00000000, ap_block_pp0_stage36_flag00000000, ap_block_pp0_stage37_flag00000000, ap_block_pp0_stage38_flag00000000, ap_block_pp0_stage39_flag00000000, ap_block_pp0_stage42_flag00000000, ap_block_pp0_stage44_flag00000000, ap_block_pp0_stage45_flag00000000, ap_block_pp0_stage46_flag00000000, ap_block_pp0_stage47_flag00000000, ap_block_pp0_stage48_flag00000000, ap_block_pp0_stage49_flag00000000, ap_block_pp0_stage52_flag00000000, ap_block_pp0_stage54_flag00000000, ap_block_pp0_stage55_flag00000000, ap_block_pp0_stage56_flag00000000, ap_block_pp0_stage57_flag00000000, ap_block_pp0_stage58_flag00000000, ap_block_pp0_stage59_flag00000000, ap_block_pp0_stage62_flag00000000, ap_block_pp0_stage64_flag00000000, ap_block_pp0_stage65_flag00000000, ap_block_pp0_stage66_flag00000000, ap_block_pp0_stage67_flag00000000, ap_block_pp0_stage68_flag00000000, ap_block_pp0_stage69_flag00000000, ap_block_pp0_stage72_flag00000000, ap_block_pp0_stage74_flag00000000, ap_block_pp0_stage75_flag00000000, ap_block_pp0_stage76_flag00000000, ap_block_pp0_stage77_flag00000000, ap_block_pp0_stage78_flag00000000, ap_block_pp0_stage79_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (exitcond_flatten_reg_845 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage73) and (ap_block_pp0_stage73_flag00000000 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage64) and (ap_block_pp0_stage64_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage65) and (ap_block_pp0_stage65_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage66) and (ap_block_pp0_stage66_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage67) and (ap_block_pp0_stage67_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage68) and (ap_block_pp0_stage68_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage69) and (ap_block_pp0_stage69_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage72) and (ap_block_pp0_stage72_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage74) and (ap_block_pp0_stage74_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage75) and (ap_block_pp0_stage75_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage76) and (ap_block_pp0_stage76_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage77) and (ap_block_pp0_stage77_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage78) and (ap_block_pp0_stage78_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage79) and (ap_block_pp0_stage79_flag00000000 = ap_const_boolean_0)))) then 
            gmem_RREADY <= grp_getVal_fu_234_m_axi_Y_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(grp_getVal_fu_234_Y_blk_n_AR, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3_flag00000000, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_flag00000000, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_flag00000000, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_flag00000000, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_flag00000000, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_flag00000000, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_flag00000000, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_flag00000000, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50_flag00000000, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage53_flag00000000, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage60_flag00000000, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage63_flag00000000, ap_CS_fsm_pp0_stage70, ap_block_pp0_stage70_flag00000000, ap_CS_fsm_pp0_stage73, ap_block_pp0_stage73_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (exitcond_flatten_reg_845 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage73) and (ap_block_pp0_stage73_flag00000000 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)))) then 
            gmem_blk_n_AR <= grp_getVal_fu_234_Y_blk_n_AR;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(grp_getVal_fu_234_Y_blk_n_R, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3_flag00000000, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_flag00000000, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_flag00000000, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_flag00000000, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_flag00000000, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_flag00000000, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_flag00000000, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_flag00000000, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_flag00000000, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50_flag00000000, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage53_flag00000000, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage60_flag00000000, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage63_flag00000000, ap_CS_fsm_pp0_stage70, ap_block_pp0_stage70_flag00000000, ap_CS_fsm_pp0_stage73, ap_block_pp0_stage73_flag00000000, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage3_flag00000000 = ap_const_boolean_0) and (exitcond_flatten_reg_845 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage73) and (ap_block_pp0_stage73_flag00000000 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)))) then 
            gmem_blk_n_R <= grp_getVal_fu_234_Y_blk_n_R;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_getVal_fu_234_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage43, ap_CS_fsm_pp0_stage50, ap_CS_fsm_pp0_stage53, ap_CS_fsm_pp0_stage60, ap_CS_fsm_pp0_stage63, ap_CS_fsm_pp0_stage70, ap_CS_fsm_pp0_stage73, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage10_flag00011001, ap_block_pp0_stage0_flag00011001, ap_block_pp0_stage20_flag00011001, ap_block_pp0_stage30_flag00011001, ap_block_pp0_stage40_flag00011001, ap_block_pp0_stage50_flag00011001, ap_block_pp0_stage60_flag00011001, ap_block_pp0_stage70_flag00011001, ap_CS_fsm_pp0_stage71, ap_block_pp0_stage71_flag00011001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_flag00011001, ap_block_pp0_stage2_flag00011001, ap_CS_fsm_pp0_stage79, ap_block_pp0_stage3_flag00011001, ap_block_pp0_stage4_flag00011001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage5_flag00011001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage6_flag00011001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_flag00011001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage8_flag00011001, ap_block_pp0_stage9_flag00011001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage11_flag00011001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage12_flag00011001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage13_flag00011001, ap_block_pp0_stage14_flag00011001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage15_flag00011001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage16_flag00011001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage17_flag00011001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage18_flag00011001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage19_flag00011001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage21_flag00011001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage22_flag00011001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage23_flag00011001, ap_block_pp0_stage24_flag00011001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage25_flag00011001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage26_flag00011001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage27_flag00011001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage28_flag00011001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage29_flag00011001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage31_flag00011001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage32_flag00011001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage33_flag00011001, ap_block_pp0_stage34_flag00011001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage35_flag00011001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage36_flag00011001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage37_flag00011001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage38_flag00011001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage39_flag00011001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage41_flag00011001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage42_flag00011001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage43_flag00011001, ap_block_pp0_stage44_flag00011001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage45_flag00011001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage46_flag00011001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_flag00011001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage48_flag00011001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage49_flag00011001, ap_CS_fsm_pp0_stage49, ap_block_pp0_stage51_flag00011001, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage52_flag00011001, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage53_flag00011001, ap_block_pp0_stage54_flag00011001, ap_CS_fsm_pp0_stage54, ap_block_pp0_stage55_flag00011001, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage56_flag00011001, ap_CS_fsm_pp0_stage56, ap_block_pp0_stage57_flag00011001, ap_CS_fsm_pp0_stage57, ap_block_pp0_stage58_flag00011001, ap_CS_fsm_pp0_stage58, ap_block_pp0_stage59_flag00011001, ap_CS_fsm_pp0_stage59, ap_block_pp0_stage61_flag00011001, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage62_flag00011001, ap_CS_fsm_pp0_stage62, ap_block_pp0_stage63_flag00011001, ap_block_pp0_stage64_flag00011001, ap_CS_fsm_pp0_stage64, ap_block_pp0_stage65_flag00011001, ap_CS_fsm_pp0_stage65, ap_block_pp0_stage66_flag00011001, ap_CS_fsm_pp0_stage66, ap_block_pp0_stage67_flag00011001, ap_CS_fsm_pp0_stage67, ap_block_pp0_stage68_flag00011001, ap_CS_fsm_pp0_stage68, ap_block_pp0_stage69_flag00011001, ap_CS_fsm_pp0_stage69, ap_block_pp0_stage72_flag00011001, ap_CS_fsm_pp0_stage72, ap_block_pp0_stage73_flag00011001, ap_block_pp0_stage74_flag00011001, ap_CS_fsm_pp0_stage74, ap_block_pp0_stage75_flag00011001, ap_CS_fsm_pp0_stage75, ap_block_pp0_stage76_flag00011001, ap_CS_fsm_pp0_stage76, ap_block_pp0_stage77_flag00011001, ap_CS_fsm_pp0_stage77, ap_block_pp0_stage78_flag00011001, ap_CS_fsm_pp0_stage78, ap_block_pp0_stage79_flag00011001)
    begin
        if ((((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_flag00011001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_block_pp0_stage3_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_block_pp0_stage19_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_block_pp0_stage20_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_block_pp0_stage22_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_block_pp0_stage23_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_block_pp0_stage24_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_block_pp0_stage25_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_block_pp0_stage26_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_block_pp0_stage27_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_block_pp0_stage28_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_block_pp0_stage29_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_block_pp0_stage30_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_block_pp0_stage32_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_block_pp0_stage33_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_block_pp0_stage34_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_block_pp0_stage35_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_block_pp0_stage36_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_block_pp0_stage37_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_block_pp0_stage38_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_block_pp0_stage39_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_block_pp0_stage40_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_block_pp0_stage42_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_block_pp0_stage43_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_block_pp0_stage44_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_block_pp0_stage45_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_block_pp0_stage46_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_block_pp0_stage47_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_block_pp0_stage48_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_block_pp0_stage49_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_block_pp0_stage50_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_block_pp0_stage52_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_block_pp0_stage53_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_block_pp0_stage54_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_block_pp0_stage55_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_block_pp0_stage56_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_block_pp0_stage57_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_block_pp0_stage58_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_block_pp0_stage59_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_block_pp0_stage60_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_block_pp0_stage62_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_block_pp0_stage63_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage64) and (ap_block_pp0_stage64_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage65) and (ap_block_pp0_stage65_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage66) and (ap_block_pp0_stage66_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage67) and (ap_block_pp0_stage67_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage68) and (ap_block_pp0_stage68_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage69) and (ap_block_pp0_stage69_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage70) and (ap_block_pp0_stage70_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage72) and (ap_block_pp0_stage72_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage73) and (ap_block_pp0_stage73_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage74) and (ap_block_pp0_stage74_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage75) and (ap_block_pp0_stage75_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage76) and (ap_block_pp0_stage76_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage77) and (ap_block_pp0_stage77_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage78) and (ap_block_pp0_stage78_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage79) and (ap_block_pp0_stage79_flag00011001 = ap_const_boolean_0)) or ((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_ap_ce <= ap_const_logic_1;
        else 
            grp_getVal_fu_234_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_getVal_fu_234_ap_start <= ap_reg_grp_getVal_fu_234_ap_start;

    grp_getVal_fu_234_xDiff_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage71, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage1_flag00000000, ap_block_pp0_stage11_flag00000000, ap_block_pp0_stage21_flag00000000, ap_block_pp0_stage31_flag00000000, ap_block_pp0_stage41_flag00000000, ap_block_pp0_stage51_flag00000000, ap_block_pp0_stage61_flag00000000, ap_block_pp0_stage71_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_xDiff <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_xDiff <= ap_const_lv2_0;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_xDiff <= ap_const_lv2_3;
        else 
            grp_getVal_fu_234_xDiff <= "XX";
        end if; 
    end process;


    grp_getVal_fu_234_yDiff_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage71, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage1_flag00000000, ap_block_pp0_stage11_flag00000000, ap_block_pp0_stage21_flag00000000, ap_block_pp0_stage31_flag00000000, ap_block_pp0_stage41_flag00000000, ap_block_pp0_stage51_flag00000000, ap_block_pp0_stage61_flag00000000, ap_block_pp0_stage71_flag00000000)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_block_pp0_stage21_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_block_pp0_stage41_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage71) and (ap_block_pp0_stage71_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_yDiff <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_block_pp0_stage61_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_yDiff <= ap_const_lv2_0;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_block_pp0_stage31_flag00000000 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_block_pp0_stage51_flag00000000 = ap_const_boolean_0)))) then 
            grp_getVal_fu_234_yDiff <= ap_const_lv2_3;
        else 
            grp_getVal_fu_234_yDiff <= "XX";
        end if; 
    end process;

    i1_cast7_cast_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_cast_fu_289_p1),31));
        i1_cast_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i1_reg_168),21));

    i2_cast_cast_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_179),31));
    i3_cast_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_reg_190),31));
    i_1_fu_283_p2 <= std_logic_vector(unsigned(i_reg_157) + unsigned(ap_const_lv11_1));
    i_2_fu_308_p2 <= std_logic_vector(unsigned(i1_reg_168) + unsigned(ap_const_lv16_1));
    i_3_fu_339_p2 <= std_logic_vector(unsigned(i2_reg_179) + unsigned(ap_const_lv21_780));
    i_4_fu_370_p2 <= std_logic_vector(unsigned(i3_reg_190) + unsigned(ap_const_lv21_780));
    indvar_flatten_next_fu_422_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_205_p4) + unsigned(ap_const_lv21_1));

    indvar_flatten_phi_fu_205_p4_assign_proc : process(exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, indvar_flatten_reg_201, indvar_flatten_next_reg_849)
    begin
        if (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            indvar_flatten_phi_fu_205_p4 <= indvar_flatten_next_reg_849;
        else 
            indvar_flatten_phi_fu_205_p4 <= indvar_flatten_reg_201;
        end if; 
    end process;

    out_pix4_sum5_cast_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum5_reg_793),32));
    out_pix4_sum5_fu_303_p2 <= std_logic_vector(unsigned(tmp_1_cast_reg_770) + unsigned(i1_cast7_cast_fu_293_p1));
    out_pix4_sum6_fu_614_p2 <= std_logic_vector(signed(fullIndex_cast_fu_510_p1) + signed(tmp_1_reg_765));
    out_pix4_sum7_cast_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum7_reg_830),32));
    out_pix4_sum7_fu_365_p2 <= std_logic_vector(unsigned(tmp_1_cast_reg_770) + unsigned(i3_cast_cast_fu_355_p1));
    out_pix4_sum8_cast_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix4_sum8_reg_811),32));
    out_pix4_sum8_fu_334_p2 <= std_logic_vector(unsigned(tmp_1_cast_reg_770) + unsigned(i2_cast_cast_fu_324_p1));
    p_i_fu_717_p3 <= 
        ap_const_lv8_FF when (tmp_10_fu_705_p2(0) = '1') else 
        ap_const_lv8_0;
    p_shl1_cast_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_398_p3),23));
    p_shl1_cast_mid1_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_mid1_fu_460_p3),23));
    p_shl1_fu_398_p3 <= (y_assign_phi_fu_216_p4 & ap_const_lv7_0);
    p_shl1_mid1_fu_460_p3 <= (y9_fu_442_p2 & ap_const_lv7_0);
    p_shl2_cast_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_541_p3),11));
    p_shl2_fu_541_p3 <= (tmp_13_reg_880 & ap_const_lv1_0);
    p_shl3_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_619_p3),11));
    p_shl3_fu_619_p3 <= (tmp_16_reg_895 & ap_const_lv1_0);
    p_shl_cast_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_386_p3),23));
    p_shl_cast_mid1_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_448_p3),23));
    p_shl_fu_386_p3 <= (y_assign_phi_fu_216_p4 & ap_const_lv11_0);
    p_shl_mid1_fu_448_p3 <= (y9_fu_442_p2 & ap_const_lv11_0);
    tmp1_cast_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_575_p2),10));
    tmp1_fu_575_p2 <= std_logic_vector(unsigned(tmp_22_0_2_cast_fu_528_p1) + unsigned(tmp_221_cast_fu_513_p1));
    tmp_10_fu_705_p2 <= "1" when (unsigned(tmp_9_fu_693_p2) < unsigned(ap_const_lv8_37)) else "0";
    tmp_12_fu_711_p2 <= "1" when (unsigned(tmp_9_fu_693_p2) > unsigned(ap_const_lv8_9B)) else "0";
    tmp_18_fu_610_p1 <= x_weight_2_fu_598_p2(8 - 1 downto 0);
    tmp_19_fu_745_p5 <= (((edge_val_1_i_reg_950 & edge_val_1_i_reg_950) & edge_val_1_i_reg_950) & edge_val_1_i_reg_950);
    tmp_1_cast_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_reg_759),31));
    tmp_1_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pix3_reg_759),32));
    tmp_20_fu_656_p2 <= std_logic_vector(unsigned(reg_250) + unsigned(tmp_18_reg_910));
    tmp_21_fu_661_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_20_fu_656_p2));
    tmp_221_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_250),9));
    tmp_22_0_2_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_875),9));
    tmp_22_2_2_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_250),11));
    tmp_22_2_cast_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_reg_890),11));
    tmp_22_fu_683_p3 <= 
        tmp_20_reg_925 when (tmp_s_reg_920(0) = '1') else 
        tmp_21_reg_930;
    tmp_23_fu_673_p1 <= y_weight_2_2_fu_644_p2(8 - 1 downto 0);
    tmp_24_1_2_cast_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_1_2_fu_558_p3),11));
    tmp_24_1_2_fu_558_p3 <= (tmp_14_reg_885 & ap_const_lv1_0);
    tmp_24_fu_677_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_23_fu_673_p1));
    tmp_25_fu_688_p3 <= 
        tmp_23_reg_940 when (tmp_4_reg_935(0) = '1') else 
        tmp_24_reg_945;
    tmp_26_fu_725_p2 <= (tmp_10_fu_705_p2 or tmp_12_fu_711_p2);
    tmp_28_0_1_cast_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_0_1_fu_517_p3),10));
    tmp_28_0_1_fu_517_p3 <= (tmp_7_reg_870 & ap_const_lv1_0);
    tmp_3_fu_328_p2 <= "1" when (unsigned(i2_reg_179) < unsigned(ap_const_lv21_1FA400)) else "0";
    tmp_4_fu_667_p2 <= "1" when (signed(y_weight_2_2_fu_644_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_5_fu_359_p2 <= "1" when (unsigned(i3_reg_190) < unsigned(ap_const_lv21_1FA400)) else "0";
    tmp_8_fu_410_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_394_p1) - unsigned(p_shl1_cast_fu_406_p1));
    tmp_8_mid1_fu_472_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_456_p1) - unsigned(p_shl1_cast_mid1_fu_468_p1));
    tmp_8_mid2_fu_478_p3 <= 
        tmp_8_mid1_fu_472_p2 when (exitcond_fu_428_p2(0) = '1') else 
        tmp_8_fu_410_p2;
    tmp_9_fu_693_p2 <= std_logic_vector(unsigned(tmp_22_fu_683_p3) + unsigned(tmp_25_fu_688_p3));
    tmp_fu_277_p2 <= "1" when (i_reg_157 = ap_const_lv11_780) else "0";
    tmp_s_fu_650_p2 <= "1" when (signed(x_weight_2_2_fu_639_p2) > signed(ap_const_lv11_0)) else "0";
    x_assign_cast4_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_mid2_fu_434_p3),23));
    x_assign_mid2_fu_434_p3 <= 
        ap_const_lv11_1 when (exitcond_fu_428_p2(0) = '1') else 
        x_assign_phi_fu_227_p4;

    x_assign_phi_fu_227_p4_assign_proc : process(exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, x_assign_reg_223, x_reg_865)
    begin
        if (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            x_assign_phi_fu_227_p4 <= x_reg_865;
        else 
            x_assign_phi_fu_227_p4 <= x_assign_reg_223;
        end if; 
    end process;

    x_fu_504_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(x_assign_mid2_fu_434_p3));
        x_weight_0_2_cast_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_weight_0_2_fu_531_p2),11));

    x_weight_0_2_fu_531_p2 <= std_logic_vector(unsigned(tmp_22_0_2_cast_fu_528_p1) - unsigned(tmp_221_cast_fu_513_p1));
    x_weight_1_1_fu_552_p2 <= std_logic_vector(signed(x_weight_0_2_cast_fu_537_p1) - signed(p_shl2_cast_fu_548_p1));
    x_weight_1_2_fu_569_p2 <= std_logic_vector(unsigned(x_weight_1_1_fu_552_p2) + unsigned(tmp_24_1_2_cast_fu_565_p1));
    x_weight_2_2_fu_639_p2 <= std_logic_vector(unsigned(tmp_22_2_2_cast_fu_635_p1) + unsigned(x_weight_2_reg_900));
    x_weight_2_fu_598_p2 <= std_logic_vector(unsigned(x_weight_1_2_fu_569_p2) - unsigned(tmp_22_2_cast_fu_595_p1));
    y9_fu_442_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(y_assign_phi_fu_216_p4));
    y_assign_mid2_fu_486_p3 <= 
        y9_fu_442_p2 when (exitcond_fu_428_p2(0) = '1') else 
        y_assign_phi_fu_216_p4;

    y_assign_phi_fu_216_p4_assign_proc : process(exitcond_flatten_reg_845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, y_assign_reg_212, y_assign_mid2_reg_854)
    begin
        if (((exitcond_flatten_reg_845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0))) then 
            y_assign_phi_fu_216_p4 <= y_assign_mid2_reg_854;
        else 
            y_assign_phi_fu_216_p4 <= y_assign_reg_212;
        end if; 
    end process;

    y_weight_1_2_cast_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_weight_1_2_fu_585_p2),11));
    y_weight_1_2_fu_585_p2 <= std_logic_vector(unsigned(tmp_28_0_1_cast_fu_524_p1) + unsigned(tmp1_cast_fu_581_p1));
    y_weight_2_1_fu_630_p2 <= std_logic_vector(unsigned(y_weight_2_reg_905) - unsigned(p_shl3_cast_fu_626_p1));
    y_weight_2_2_fu_644_p2 <= std_logic_vector(unsigned(y_weight_2_1_fu_630_p2) - unsigned(tmp_22_2_2_cast_fu_635_p1));
    y_weight_2_fu_604_p2 <= std_logic_vector(unsigned(y_weight_1_2_cast_fu_591_p1) - unsigned(tmp_22_2_cast_fu_595_p1));
end behav;
