

================================================================
== Vivado HLS Report for 'getVal'
================================================================
* Date:           Mon Apr 16 18:05:51 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        SobelLab4
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    9|    9|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 1
  Pipeline-0: II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
* FSM state operations: 

 <State 1>: 6.41ns
ST_1: inter_pix1_read (7)  [1/1] 0.00ns
:1  %inter_pix1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %inter_pix1)

ST_1: yDiff_read (8)  [1/1] 0.00ns
:2  %yDiff_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %yDiff)

ST_1: xDiff_read (9)  [1/1] 0.00ns
:3  %xDiff_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %xDiff)

ST_1: index_read (10)  [1/1] 0.00ns
:4  %index_read = call i23 @_ssdm_op_Read.ap_auto.i23(i23 %index)

ST_1: p_shl (11)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:5  %p_shl = call i13 @_ssdm_op_BitConcatenate.i13.i2.i11(i2 %yDiff_read, i11 0)

ST_1: p_shl2 (12)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:6  %p_shl2 = call i9 @_ssdm_op_BitConcatenate.i9.i2.i7(i2 %yDiff_read, i7 0)

ST_1: p_shl2_cast (13)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:7  %p_shl2_cast = sext i9 %p_shl2 to i13

ST_1: tmp (14)  [1/1] 1.91ns  loc: SobelLab4/Sobel.cpp:72
:8  %tmp = sub i13 %p_shl, %p_shl2_cast

ST_1: xDiff_cast (15)  [1/1] 0.00ns
:9  %xDiff_cast = sext i2 %xDiff_read to i13

ST_1: tmp1 (16)  [1/1] 1.91ns  loc: SobelLab4/Sobel.cpp:72
:10  %tmp1 = add i13 %tmp, %xDiff_cast

ST_1: tmp1_cast (17)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:11  %tmp1_cast = sext i13 %tmp1 to i22

ST_1: tmp_24 (18)  [1/1] 0.00ns
:12  %tmp_24 = trunc i23 %index_read to i22

ST_1: sum (19)  [1/1] 2.59ns  loc: SobelLab4/Sobel.cpp:72
:13  %sum = add i22 %tmp1_cast, %tmp_24


 <State 2>: 2.90ns
ST_2: sum_cast (20)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:14  %sum_cast = sext i22 %sum to i32

ST_2: sum1 (21)  [1/1] 2.90ns  loc: SobelLab4/Sobel.cpp:72
:15  %sum1 = add i32 %inter_pix1_read, %sum_cast

ST_2: Y_addr (22)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:16  %Y_addr = getelementptr i8* %Y, i32 %sum1


 <State 3>: 8.75ns
ST_3: Y_load_req (23)  [7/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 4>: 8.75ns
ST_4: Y_load_req (23)  [6/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 5>: 8.75ns
ST_5: Y_load_req (23)  [5/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 6>: 8.75ns
ST_6: Y_load_req (23)  [4/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 7>: 8.75ns
ST_7: Y_load_req (23)  [3/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 8>: 8.75ns
ST_8: Y_load_req (23)  [2/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 9>: 8.75ns
ST_9: Y_load_req (23)  [1/7] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:17  %Y_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %Y_addr, i32 1)


 <State 10>: 8.75ns
ST_10: StgValue_34 (6)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i8* %Y, [6 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [6 x i8]* @p_str2, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_10: Y_addr_read (24)  [1/1] 8.75ns  loc: SobelLab4/Sobel.cpp:72
:18  %Y_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %Y_addr)

ST_10: StgValue_36 (25)  [1/1] 0.00ns  loc: SobelLab4/Sobel.cpp:72
:19  ret i8 %Y_addr_read



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.41ns
The critical path consists of the following:
	wire read on port 'yDiff' [8]  (0 ns)
	'sub' operation ('tmp', SobelLab4/Sobel.cpp:72) [14]  (1.91 ns)
	'add' operation ('tmp1', SobelLab4/Sobel.cpp:72) [16]  (1.91 ns)
	'add' operation ('sum', SobelLab4/Sobel.cpp:72) [19]  (2.59 ns)

 <State 2>: 2.9ns
The critical path consists of the following:
	'add' operation ('sum1', SobelLab4/Sobel.cpp:72) [21]  (2.9 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'Y' (SobelLab4/Sobel.cpp:72) [23]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'Y' (SobelLab4/Sobel.cpp:72) [24]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
